[tool.poetry]
name = "nearai"
version = "0.1.0"
description = ""
authors = ["Marcelo Fornet <mfornet94@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
backoff = { version = "^2.2.1" }
base58 = { version = "2.1.1", optional = true }
boto3 = { version = "^1.34.100" }
boto3-stubs = { version = "^1.34.147" }
datasets = { version = "^2.20.0" }
fabric = { version = "^3.2.2", optional = true }
fastapi = { version = "^0.111.0", optional = true }
fastapi-cli = { version = "^0.0.4", optional = true }
fire = { version = "^0.6.0" }
flask = { version = "^3.0.3", optional = true }
gunicorn = { version = "^22.0.0", optional = true }
jinja2 = { version = "^3.1.4" }
litellm = { version = "^1.41.0" }
mypy-boto3 = { version = "^1.34.147" }
mypy-boto3-s3 = { version = "^1.34.138" }
openai = { version = "^1.30.1" }
pandas-stubs = { version = "^2.2.2.240603" }
peft = "^0.10.0"
psutil = { version = "^5.9.5" }
pydantic = { version = "^2.7.1", optional = true }
pydantic-core = { version = "^2.18.4", optional = true }
pymysql = { version = "^1.1.0" }
python-dotenv = { version = "^1.0.1", optional = true }
requests = { version = "^2.31.0", optional = true }
setuptools = { version = "^69.5.1" }
tabulate = { version = "^0.9.0" }
tenacity = { version = "^8.2.3" }
tensorboardX = { version = "^2.6.2.2" }
torch = { version = "^2.2.2" }
torchao = { version = "^0.3.1", optional = true }
torchtune = { version = "^0.2.0", optional = true }
tqdm = { version = "^4.66.4" }
transformers = { version = "^4.40.2" }
types-cffi = { version = "^1.16.0.20240331" }
types-colorama = { version = "^0.4.15.20240311" }
types-psutil = { version = "^6.0.0.20240621" }
types-pygments = { version = "^2.18.0.20240506" }
types-pyyaml = { version = "^6.0.12.20240724" }
types-redis = { version = "^4.6.0.20240425" }
types-regex = { version = "^2024.5.15.20240519" }
types-setuptools = { version = "^71.1.0.20240724" }
types-ujson = { version = "^5.10.0.20240515" }
vllm = { version = "^0.5.3", optional = true }

[tool.poetry.extras]
# Experiment platform
explatform = ["flask", "fabric", "gunicorn", "requests"]
hub = [
    "base58",
    "fastapi",
    "fastapi-cli",
    "pydantic",
    "pydantic-core",
    "python-dotenv",
    "requests",
]
torch = ["torch", "torchao", "torchtune"]
vllm = ["vllm", "torch"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
ruff = "^0.5.2"

[tool.poetry.scripts]
nearai = "nearai.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["nearai"]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
]
extend-exclude = ["tests", "projects", "examples"]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
]
ignore = [
    "B008", # do not perform calls in argument defaults
    "C901", # too complex
    "C408", # dict() constructor
    "C417", # enforce list comprehension
    "W191", # indentation contains tabs
    "D401", # imperative mood
    "D100", # Missing docstring module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
exclude = [
    "tests",
    "venv",
    ".venv",
    ".vscode",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
]

[[tool.mypy.overrides]]
module = [
    'datasets.*',
    'fire.*',
    'tqdm.*',
    'fabric.*',
    'tabulate.*',
    'requests.*',
    'tensorboardX.*',
    'pymysql.*',
    'torchtune.*',
    'torchao.*',
]
ignore_missing_imports = true
