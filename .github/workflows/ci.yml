name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: pipx install poetry

    - name: Get Poetry cache dir
      id: poetry-cache
      run: echo "dir=$(poetry config cache-dir)" >> $GITHUB_OUTPUT

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.poetry-cache.outputs.dir }}
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-

    - name: Install Codespell
      run: pip install codespell

    - name: Run Codespell
      run: codespell --config .codespellrc

    - name: check lock file for inconsistencies
      run: poetry check --lock

    - name: Install dependencies
      run: poetry install --extras explatform --extras hub

    - name: Lint Check
      run: ./scripts/lint_check.sh

    - name: Format Check
      run: ./scripts/format_check.sh

    - name: Type Check
      run: ./scripts/type_check.sh

    - name: Build Site
      run: ./scripts/build_mkdocs.sh

  integration:
    runs-on: integration
    timeout-minutes: 30
    environment: NearAI CI
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker

    # TODO: remove this step, in order to build the child images
    # we need to have the base image already built
    - name: Build nearai_base Image
      run: docker compose -f .docker/compose-ci.yml build nearai_base
    
    - name: Build Docker Images
      run: docker compose -f .docker/compose-ci.yml build

    - name: Start Docker Compose
      run: docker compose -f .docker/compose-ci.yml up -d
      env:
        SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}

    - name: Exec Integration Tests
      run: sleep 60 && docker exec docker-ci-1 poetry run pytest -m integration ./ci/
    
    - name: Stop Docker Compose
      run: docker compose -f .docker/compose-ci.yml down